# Task ID: 3
# Title: Design system and accessibility baseline
# Status: done (automated checks passed; manual senior validation accepted)
# Dependencies: None
# Priority: high
# Description: Implement senior-first design tokens: base 18px typography, color palette, 44px touch targets, and WCAG 2.1 AA checks.
# Details:
Implemented:
- CSS custom properties design tokens at web/src/styles/design-tokens.css
- Tailwind theme extensions in web/tailwind.config.cjs to expose tokens as utilities
- Global base typography and token imports in web/src/styles/tailwind.css
- Playwright + axe runner script at web/scripts/run-axe-playwright.js
- Accessibility devDependencies (axe-core, @axe-core/cli, @axe-core/playwright, playwright, lighthouse, @lhci/cli) added to web/package.json

Pending:
- Execute automated accessibility scans against a running local server and remediate violations [done — no violations found; reports saved at /home/abhishekmendiratta/Novaqy_MVP/a11y-axe-report.json and web/reports/lh-report.json]
- Add CI (Jenkins) stage to run axe-playwright / LHCI and fail builds on violations [done — .jenkins/accessibility-stage.groovy present and Jenkinsfile loads it]
- Final verification (manual senior accessibility checklist + Lighthouse / axe zero-violation targets) [done — manual senior validation completed and task marked complete by request on 2025-03-09]

# Test Strategy:
Automated:
- Run axe-core via Playwright: node ./scripts/run-axe-playwright.js http://localhost:4321 (exits non-zero when violations found)
- Lighthouse (LHCI) for broader accessibility metrics and regression: lhci autorun or lighthouse CLI --only-categories=accessibility
- Save machine-readable reports: ./reports/a11y-axe-report.json and ./reports/lh-report.json

Manual:
- Senior Accessibility Checklist validation (18px base, 44px touch targets, 4.5:1 contrast, keyboard navigation, visible focus)
- Screen reader spot checks (NVDA / VoiceOver)
- 200% zoom and older-device performance checks

CI:
- Jenkins stage will:
  1. Build static site (astro build)
  2. Serve built site (astro preview or a simple static server)
  3. Install Playwright browsers (or use Playwright Docker)
  4. Run axe-playwright and LHCI; fail pipeline on non-zero exit

# Subtasks:
## 1. Define senior-first design token naming conventions [done]
### Dependencies: None
### Description: Establish clear, descriptive, and consistent naming conventions for design tokens, prioritizing accessibility and senior-first principles.
### Details:
Naming conventions documented via CSS custom properties and Tailwind theme keys. Categories: color, typography, spacing, touch, and component sizing. Use `--color-<role>`, `--font-size-<scale>`, `--space-<size>`, `--touch-target-min`.

## 2. Create base 18px typography tokens [done]
### Dependencies: 3.1
### Description: Implement design tokens for typography with a base font size of 18px, including headings, body text, and other relevant text styles.
### Details:
Tokens created: `--font-size-base: 1.125rem` (18px), `--line-height-base: 1.6`, and Tailwind `fontSize.base` set to `1.125rem` with appropriate line-height. Global base applied in CSS so components inherit readable defaults.

## 3. Develop accessible color palette tokens [done]
### Dependencies: 3.1
### Description: Design and document a color palette using tokens that meet senior-first accessibility needs, including sufficient contrast ratios.
### Details:
Primary, secondary, success, warning, error, background, surface, and text tokens defined. Colors chosen in PRD (e.g., #1e40af, #0f766e) meet 4.5:1 for typical text usages; developers must validate foreground/background combinations for component-specific cases.

## 4. Implement 44px touch target spacing tokens [done]
### Dependencies: 3.1
### Description: Create spacing and sizing tokens to ensure all interactive elements have a minimum touch target size of 44px.
### Details:
Tokens: `--touch-target-min: 44px`, spacing tokens `--space-xl: 44px`, utility classes and Tailwind minWidth/minHeight `touch` mapped. Buttons and interactive components updated to ensure min dimensions.

## 5. Integrate WCAG 2.1 AA accessibility checks [done]
### Dependencies: 3.2, 3.3, 3.4
### Description: Establish processes and tools to validate that all design tokens and components meet WCAG 2.1 AA accessibility standards.
### Details:
- Playwright + axe script created at `web/scripts/run-axe-playwright.js` and executed locally against the built site.
- Local scan result: No accessibility violations detected by axe-core.
- Report saved at `/home/abhishekmendiratta/Novaqy_MVP/a11y-axe-report.json`.
- LHCI/Lighthouse devDependency present; running LHCI and adding a Jenkins stage remain as next steps to enforce checks in CI.
- Next actions: add LHCI configuration, add Jenkins accessibility stage (build → serve → install Playwright browsers → run axe-playwright & lhci), and perform final manual senior checklist validation.

# Progress Notes:
- Design tokens and Tailwind theme implemented and committed.
- Accessibility tooling added; Playwright browsers installed on the machine where the script was executed. A local axe-core scan was run and returned no violations.
- Report location: `/home/abhishekmendiratta/Novaqy_MVP/a11y-axe-report.json`.
- Recommended immediate next steps:
  - Run Lighthouse/LHCI for broader accessibility metrics: `npx lighthouse http://localhost:4321 --only-categories=accessibility --output=json --output-path=./reports/lh-report.json`
  - Add LHCI configuration and a Jenkins accessibility stage to run axe-playwright and LHCI in CI and fail on non-zero exit.
  - Perform manual senior checklist validation (200% zoom, keyboard navigation, screen reader spot checks) before marking the task complete.
