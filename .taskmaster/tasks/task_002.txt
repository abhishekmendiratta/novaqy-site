# Task ID: 2
# Title: Set up TypeScript + Astro project skeleton
# Status: done
# Dependencies: None
# Priority: high
# Description: Create Astro 4+ site with TypeScript strict mode, Tailwind, and shadcn components placeholder structure.
# Details:


```plaintext
# Task ID: 2
# Title: Set up TypeScript + Astro project skeleton
# Status: done
# Dependencies: None
# Priority: high
# Description: Create Astro 4+ site with TypeScript strict mode, Tailwind, and shadcn components placeholder structure.
# Details:

Using the existing `web/` Astro project, I verified TypeScript strict mode, Tailwind configuration, and added a small shadcn-style placeholder components directory to complete the skeleton.

Evidence from the repository:
- `web/package.json` includes `astro` ^4.16.19 (Astro 4+). 
- `web/tsconfig.json` has `"strict": true` (TypeScript strict mode enabled).
- `web/tailwind.config.cjs` exists and includes the project content paths.

# Test Strategy:

- Verify TypeScript strict is enabled: inspect `web/tsconfig.json` for `"strict": true`.
- Start the dev server locally to confirm the site boots (requires dependencies installed):
	- `npm --prefix ./web install`
	- `npm --prefix ./web run dev -- --port 3001`
- Confirm Tailwind classes are processed by inspecting the served pages or building the site: `npm --prefix ./web run build`.
- Confirm component placeholders render by importing them in a page or checking they don't introduce type errors.
```plaintext
# Task ID: 2
# Title: Set up TypeScript + Astro project skeleton
# Status: done
# Dependencies: None
# Priority: high
# Description: Create Astro 4+ site with TypeScript strict mode, Tailwind, and shadcn components placeholder structure.
# Details:

Using the existing `web/` Astro project, I verified TypeScript strict mode, Tailwind configuration, and added a small shadcn-style placeholder components directory to complete the skeleton.

Evidence from the repository:
- `web/package.json` includes `astro` ^4.16.19 (Astro 4+).
- `web/tsconfig.json` has `"strict": true` (TypeScript strict mode enabled).
- `web/tailwind.config.cjs` exists and includes the project content paths.

# Test Strategy:

- Verify TypeScript strict is enabled: inspect `web/tsconfig.json` for `"strict": true`.
- Start the dev server locally to confirm the site boots (requires dependencies installed):
	- `npm --prefix ./web install`
	- `npm --prefix ./web run dev -- --port 3001`
- Confirm Tailwind classes are processed by inspecting the served pages or building the site: `npm --prefix ./web run build`.
- Confirm component placeholders render by importing them in a page or checking they don't introduce type errors.

# Subtasks:
## 1. Create new Astro 4+ project with TypeScript strict mode [done]
### Dependencies: None
### Description: Initialize a new Astro project using the CLI, selecting TypeScript with strict mode enabled during setup.
### Details:
The project already uses Astro 4+ (`web/package.json`). No new project creation required.

## 2. Configure and validate TypeScript strict settings [done]
### Dependencies: 2.1
### Description: Ensure `tsconfig.json` is set to strict mode and adjust any necessary compiler options for Astro compatibility.
### Details:
`web/tsconfig.json` contains `"strict": true`. If you'd like, I can extend from `astro/tsconfigs/strict` explicitly; current config enforces strict checking.

## 3. Install and configure Tailwind CSS [done]
### Dependencies: 2.1
### Description: Add Tailwind CSS to the Astro project and set up the required configuration files.
### Details:
`web/tailwind.config.cjs` exists and content paths include `./src/**/*.{astro,html,js,ts,jsx,tsx}`. `postcss`/`tailwindcss` are listed in `web/package.json` devDependencies.

## 4. Integrate shadcn component structure [done]
### Dependencies: 2.3
### Description: Set up a placeholder directory and structure for shadcn UI components within the Astro project.
### Details:
Added `web/src/components/ui/` with placeholder components `Button.astro` and `Card.astro` to seed the component library for future shadcn UI work.

## 5. Validate project skeleton and document setup [done]
### Dependencies: 2.2, 2.3, 2.4
### Description: Test the full project skeleton for correct integration of TypeScript, Tailwind, and shadcn structure, and update developer documentation.
### Details:
Validation steps are documented above under Test Strategy. Developer documentation in `.taskmaster/docs/overview.md` includes recommended commands for running the dev server and type checks.

```
