/* Design tokens for Novaqy - senior-first baseline
   Tokens mirror .taskmaster/task_003 documentation and tailwind.config.cjs
   Use CSS custom properties for non-Tailwind consumers and fallbacks.
*/

:root{
  /* Colors */
  --color-primary: #1e40af;
  --color-secondary: #0f766e;
  --color-success: #15803d;
  --color-warning: #b45309;
  --color-error: #b91c1c;
  --color-background: #ffffff;
  --color-surface: #f9fafb;
  --color-text: #111827;

  /* Typography */
  --font-family-primary: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  --font-size-base: 1.125rem; /* 18px */
  --font-size-lg: 1.5rem;     /* 24px */
  --font-size-xl: 1.875rem;   /* 30px */
  --line-height-base: 1.6;

  /* Spacing & touch */
  --space-xs: 8px;
  --space-sm: 16px;
  --space-md: 24px;
  --space-lg: 32px;
  --space-xl: 44px;
  --touch-target-min: 44px;
  --padding-button-vertical: 12px;
  --padding-button-horizontal: 24px;
}

/* Base element fallbacks and tokens usage (applied in tailwind.css later) */
html, body {
  font-family: var(--font-family-primary);
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  color: var(--color-text);
  background-color: var(--color-background);
}

/* Accessible focus style for keyboard users */
:focus-visible {
  outline: 3px solid var(--color-primary);
  outline-offset: 3px;
}

/* Button base to guarantee touch target and padding for non-Tailwind components */
.btn, button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: var(--touch-target-min);
  padding: var(--padding-button-vertical) var(--padding-button-horizontal);
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  font-family: var(--font-family-primary);
  cursor: pointer;
  border-radius: 6px;
  border: none;
  background-color: var(--color-primary);
  color: white;
}

.btn:focus, button:focus {
  outline: 3px solid var(--color-primary);
  outline-offset: 3px;
}

/* Responsive improvements for readable phone display and balanced desktop sizing */
/* Keep senior-first minimum base size (18px) while allowing modest scaling on larger viewports */
html {
  /* Minimum 18px, scale slightly with viewport width up to 20px for large screens */
  font-size: clamp(18px, 1.125rem + 0.6vw, 20px);
}

/* Limit global icon sizes so iconography doesn't dominate layouts */
svg, img.icon, .icon {
  width: 1.25rem;
  height: 1.25rem;
  max-width: 100%;
  vertical-align: middle;
}

/* Ensure responsive hero and above-the-fold areas behave on small screens */
.hero {
  min-height: 40vh;
}

/* Reduce hero height slightly on very small screens to avoid excessive scrolling */
@media (max-width: 480px) {
  .hero {
    min-height: 30vh;
  }
  /* Slightly reduce large paddings on very small screens */
  :root {
    --space-md: 16px;
    --space-lg: 24px;
  }
}

/* Ensure buttons remain accessible but not oversized on large screens */
.btn, button {
  min-height: var(--touch-target-min);
  padding: var(--padding-button-vertical) var(--padding-button-horizontal);
}

/* Tame oversized SVGs emitted by component libraries */
svg[width][height] {
  max-width: 2.25rem;
  max-height: 2.25rem;
}

/* Utility to make text wrap better on narrow screens */
.u-break {
  word-break: break-word;
  overflow-wrap: anywhere;
}

/* Utility classes useful for components that may not use Tailwind directly */
.u-touch-size {
  min-width: var(--touch-target-min);
  min-height: var(--touch-target-min);
}
.u-mt-md { margin-top: var(--space-md); }
.u-mb-md { margin-bottom: var(--space-md); }
.u-p-sm { padding: var(--space-sm); }

/* Logo/header sizing utility */
.site-logo {
  width: 10rem;
  max-width: 40vw;
  height: auto;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/* Icon size utility classes */
.icon-sm { width: 0.75rem; height: 0.75rem; }
.icon-md { width: 1rem;   height: 1rem; }
.icon-lg { width: 1.5rem; height: 1.5rem; }
.icon-xl { width: 2rem;   height: 2rem; }

/* Interactive utility for subtle hover/focus motion */
.interactive {
  transition: transform .18s ease, opacity .18s ease, box-shadow .18s ease;
  will-change: transform, opacity;
}
.interactive:hover,
.interactive:focus {
  transform: translateY(-3px) scale(1.02);
  box-shadow: 0 8px 20px rgba(15, 23, 42, 0.08);
  opacity: 1;
}

/* Card utility with gentle elevation */
.card {
  background: var(--color-background);
  border-radius: 12px;
  padding: var(--space-md);
  transition: box-shadow .18s ease, transform .18s ease;
  box-shadow: 0 2px 6px rgba(15,23,42,0.04);
}
.card--hover:hover {
  transform: translateY(-4px);
  box-shadow: 0 12px 30px rgba(15,23,42,0.08);
}

/* Illustration wrapper to reduce "skeleton" feel */
.illustration-wrapper {
  background: linear-gradient(180deg, rgba(249,250,251,0.8), rgba(255,255,255,0.9));
  border-radius: 12px;
  padding: 12px;
  box-shadow: 0 8px 24px rgba(15,23,42,0.04);
  display: inline-block;
}

/* Tweak global svg default to be slightly smaller to avoid dominating layouts */
svg, img.icon, .icon {
  width: 1rem;
  height: 1rem;
  max-width: 100%;
  vertical-align: middle;
}

/* Notes:
 - Use these variables inside components and Tailwind layers where needed.
 - Tailwind theme is also extended (web/tailwind.config.cjs) so prefer Tailwind tokens in templates for consistency.
*/
